services:
  argos_main: 
    container_name: argos_main
    build: .
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASS}@db:5432/${POSTGRES_DB}
    entrypoint: ["sleep", "infinity"]
    volumes: 
      - argos_data:/argos_data
    restart: unless-stopped
    networks: 
      - argos_network
    
  db:
    container_name: argos_postgres-db
    image: postgres:latest
    environment: 
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes: 
      - postgres_data:/var/lib/postgresql/data
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - argos_network

  subfinder: 
    container_name: argos_subfinder
    image: projectdiscovery/subfinder:latest
    depends_on: 
      - argos_main
    entrypoint: /bin/sh
    command: -c "subfinder -dL argos_data/domains.txt -o /recondata/subfinder.txt" 
    restart: "no"
    volumes:
     - argos_data:/argos_data
     - ./domains.txt:/argos_data/domains.txt
    networks:
      - argos_network

volumes: 
  postgres_data:
  argos_data:

networks: 
  argos_network:
    driver: bridge